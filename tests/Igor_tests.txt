--MF tests (passed correctly):

main = 3 * f 4 5 6;
f x y z = x*y+(z-y);

f x y = if x == y then true else false;
main = f 3 4 & f 4 4;

f x = x * 2;
g x = x * 3;
main = f (g 3);

f x = x * 2;
g x = x * 3;
main = f g 3;

f x = if x < 1 then true else false;
main = f 3; 

f x = 3 * x;
main = let x = 5 in x * f x;

main = let x = 3 in f x;
f x = if x < 1 then true else false;

main = if f 2 == 3 then 4 else false;
f x = 3 * x;

main = f 3 & not f 4 | f 5;
f x = if x < 4 then true else false;

main = f 3 | not f 4 | f 5;
f x = if x < 4 then true else false;

main = if not (fthen 3 & felse 4 & ftrue 5 5 & ffalse 6) then 1 else 2;
fthen x = if x < 2 then let x = 3 in f x else false;
f x = if x == 3 then true else false;
felse x = if x + 3 < 5 then true else false;
ftrue x y = if x + (y - y) == x then true else false;
ffalse x = true;     

main = function1 3 4 5 6 7 8;
function1 x y z a b c = x + function2 y z a b c;
function2 y z a b c = y + function3 z a b c;
function3 z a b c = z + function4 a b c;
function4 a b c = a + function5 b c;
function5 b c = b + c;

main = f 3 * f 4 - (f 5 * f 6 - f 7 * f 8);
f x = x * x;

main = f 3 * f 4 - (f 5 * f 6 - f 7 * f 8);
f x = x * (x / x);

main = f 3 (f 4 (f 5 (f 6 (f 7 7))));
f x y = let x = 4 in (x * y) / x - 3;

main = 4 * (5 * (6 * (7 / 7)));

main = let x = (if (f 4) == true then true else false) in x & x;
f x = if x == g x then true else false;
g x = (x*x)/x;

main = let x = not (if (f 4) == true then true else false) in x & x | not y x;
f x = if x == g x then true else false;
g x = (x*x)/x;
y x = if x == true then false else true;

main = f 10 9;
f x y = if x == 0 then y else x * f (x - 1) (y * x);

main = f 10 * g 10;
f x = if x == 0 then x else f (x - 1);
g x = if x < 1 then x else g (x - 1); 

main = if let x = 4 in x * x == 9 then true else false;


--for Errorstatements:

IMPROVEMENTWORTHY:
main = f 3 (f 4 (f 5 (f 6 (f 7)))); f x y = x / y; -- done


REIMPLEMENTED:
main = not 4;
main = true * true;
main = false + false;
main = 3 * true;
main = true * 3;


ERROR MESSAGE ACCEPTABLE:
main = 3 & 4;
main = true * true;
main = false + false;
main = 3 | 4;
main = 3 & 4;
main = if let 3 = 4 in 3 * 3 == 9 then true else false;
main = f 3 * f 4 - f 5 * f 6 - f 7 * f 8;
f x = x * x;
main = f 3 * f 4 - (f 5 * f 6 - f 7 * f 8);
f x = x * x / x;
main = 3 / f 4;
f x = 0;
main = f 10 * g 10;
f x = if x == 0 then x else f (x - 1);


--endless loop:
main = f 10;
f x = f (x - 1);